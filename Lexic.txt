Alphabet:

	a. Upper (A-Z) and lower case letters (a-z) of the English alphabet

       	b. Decimal digits (0-9);

Lexic:

 	a.Special symbols, representing:

		- operators: + - * / is < <= = >= > || &&

		- separators: ( ) [ ] : space # $ ~$ ; .

		- reserved words: int get unless do assume otherwise post bool char str
			
			

      	b.identifiers

  		-a sequence of letters and  digits, such that the first character is a letter; the rule is:

    			<identifier> ::= <letter> | <letter><sequence>

			<sequence> ::= <alphanumeric> | <alphanumeric><sequence>

			<alphanumeric> ::= <letter> | <digit>

    			<letter> ::=  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z

 			<digit>  ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

      	c.constants

		1.integer:

      			<noconst> ::= 0 | +<no> | -<no> | <no>

      			<no> ::= <nonzerodigit> | <nonzerodigit><nrsequence>

			<nonzerodigit> ::= 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

			<nrsequence> ::= <digit> | <digit><nrsequence>

		2.character:

    			<char> ::= '<letter>' | '<digit>'

		3.string:

      			<str> ::= "" | "<string>"

      			<string> ::= <alphanumeric> | <alphanumeric><string>

